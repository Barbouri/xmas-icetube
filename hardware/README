####################################
## xmas-icetube Hardware Revision ##
####################################

The xmas-icetube hardware revision is a redesign of the Adafruit Ice Tube
Clock and is discussed in the following thread:

    http://forums.adafruit.com/viewtopic.php?t=43836

The current versions of the xmas-icetube custom parts are:

  - main board   (Rev. D)
  - side board   (Rev. C)
  - acrylic case (Rev. A)


##############
## Features ##
##############

The xmas-icetube revision has the following improvements over the original
Adafruit design.  Although all of these features are incorporated into the
xmas-icetube board, many of the links given are oriented toward modifying
the original Adafruit clock to include the corresponding features.  Those
discussions are still relevant to the xmas-icetube revision, however.

* IV-18 tube driven to specifications:  The Adafruit design runs the IV-18
  in a way that results in inconsistent illumination across the display,
  and on some tubes, the effect is quite noticeable.  The original IV-18
  drived also accelerated the process of cathode poisoning.  Driving the
  IV-18 as the designers intended ensures uniform illumination and makes
  the tube less prone to cathode poisoning.

  http://forums.adafruit.com/viewtopic.php?t=23586
  http://forums.adafruit.com/viewtopic.php?t=41811

  
* Automatic dimming:  A photoresistor allows automatic dimming as
  appropriate for the ambient lighting.  The Adafruit design does,
  however, have an expansion area that can also be used to this end.

  http://forums.adafruit.com/viewtopic.php?t=12932


* 25-fold reduction in sleep current:  Unless the clock is without power
  for over a year, the battery should never need replacement.

  http://forums.adafruit.com/viewtopic.php?t=36697  
  http://forums.adafruit.com/viewtopic.php?p=219736#p219736


* Temperature compensated timekeeping:  A DS18B20 temperature sensor next
  to the clock crystal allows the software to compensate for temperature-
  related timekeeping error.  When combined with software-based drift
  correction, the resulting accuracy should be comparable to a temperature
  compensated quartz oscillator.

  http://forums.adafruit.com/viewtopic.php?t=43998
  http://forums.adafruit.com/viewtopic.php?f=41&t=12720


* GPS solder points:  Through-hold solder points allow easier installation
  of an external GPS unit for time synchronization.

  http://forums.adafruit.com/viewtopic.php?t=36873
  http://learn.adafruit.com/ice-tube-clock-kit/mods

  Alternatively, these solder points may also be used for installing a
  dedicated temperature compensated crystal oscillator instead of the
  DS18B20 temperature sensor above.

  http://forums.adafruit.com/viewtopic.php?&t=14941


* Robust in-system programming:  The clock may be programmed regardless of
  whether the display and side board are installed.  I recommend powering
  the clock with external power during programming, but a programming
  jumper provides a way to force the clock into sleep mode to ensure minimal
  power consumption if powered by the programmer instead.  I recommend
  using the jumper if using the AVR Dragon programmer, as the Dragon can
  barely provide enough power for programming alone.  But the jumper is
  unnecessary for most programmers including the Adafruit USBtinyISP.

  http://forums.adafruit.com/viewtopic.php?t=41975


* Robust microcontroller environment:  The microcontroller now has a
  decoupling capacitor and 10K pull-up on the reset pin, both of which
  should make it less sensitive to electrical noise.  The Adafruit design
  did not seem to have any problems related to electrical noise, but the
  new capacitor and pull-up ensures reliable operation.


Finally, although the xmas-icetube firmware is compatible with *both* the
original Adafruit clock and the xmas-icetube hardware revision, the
xmas-icetube revision is not compatible with firmwares developed
specifically for the Adafruit clock.


##############################
## Editing the Design Files ##
##############################

The board revisions can be opened and and modified with Eagle,
which is available from CadSoft:

    http://www.cadsoftusa.com/

The case revision may be viewed and modified in Inkscape:

    http://inkscape.org/


##########################
## Collecting the Parts ##
##########################

I ordered my circuit boards from OSH Park and have shared those uploads
in case others would like to do the same:

    http://www.oshpark.com/shared_projects/6xAVpeHb
    http://www.oshpark.com/shared_projects/PiRXWH3F

I ordered the acrylic parts from Ponoko and have also shared that design:

    http://www.ponoko.com/showroom/jarchie

See the enclosed bill of materials (BOM.csv) for a complete parts list,
including manufacturers, suppliers, and part numbers.


#######################
## Construction Tips ##
#######################

For aesthetic reasons, the xmas-icetube design uses TO-92 packages for the
voltage regulators, so their ability to burn off excess voltage is limited.
The 9VDC input should stay below 10v at 120 mA to be on the safe side:  A
standard regulated switching-type 9v adapter should work fine, but I
recommend against using an older, unregulated, transformer-type wall wort.

Alternatively, the board will accommodate regulators in TO-220 packages,
even though the silkscreen shows TO-92 packages.  The holes are a bit small
for TO-220s, so it might be necessary to file down the TO-220 leads to make
them narrower, but those packages will work with a bit of extra effort.
Although, I do prefer the TO-92s, TO-220s would look okay--just a bit bulky.

When assembling the parts, I suggest building the circuit incrementally and
testing each section after it is built.  See the Eagle schematics for the
parts in each section.

1.  Solder the "5V Power Supply" parts.  Connect the 9v adaptor and verify
    that the power supply outputs 5v; disconnect and proceed.

2.  Solder the "Temperature Sensor" parts.  (It's easier to solder R9
    before inserting the microcontroller into its socket.)

3.  Solder the "Microcontroller", "ISP Header", "Battery Sensor", and
    "Speaker" parts.  Program the ATmega328P (see the firmware/README file
    for details).  When powered with the AC adaptor, the speaker should
    beep when powered for the first time.  Keep the AC adaptor connected
    for at least ten seconds after hearing the beep.

    If the speaker does not beep, ensure the programming jumper has been
    removed and that the ATmega328P is properly programmed.  If the speaker
    beeps repeatedly at 8 second intervals, the problem is most likely with
    the crystal oscillator.  If the oscillator parts and connections are
    good, cleaning excess rosin from the board with a toothbrush and
    rubbing alcohol might fix the problem, but make sure the board is
    completely dry before powering it again.

4.  Solder the "5VAC Cathode/Filament Supply" parts.  Measure the AC voltage
    between the two push-pull outputs (AC1 and AC2).  The push-pulls should
    provide high frequency, square wave, alternating current, which most
    multimeters cannot measure accurately.  Without a load, the LM317 will not
    effectively regulate voltage anyway, so multimeter accuracy does not
    matter.  So ensure that AC1 and AC2 are providing alternating current,
    but the amount of voltage measured is not important.

5.  Solder the "Tube 30-60VDC Boost Supply" parts.  Note that the joined
    leads of Q2 should be oriented toward C6.  Connect the 9v adaptor and
    verify that the boost circuit indeed provides 50-60 volts.

6.  Solder the "VFD Anode/Segment Controller" and "VFD Tube / Side PCB"
    parts.  Attach the side board to the main board, connect the 9v
    adaptor, and verify that the VFD display is functional.

7.  Solder the "Buttons and Alarm Switch" parts.  Connect the 9v adaptor
    and verify that the buttons and alarm switch function properly.

8.  Solder the "Battery Backup" parts and insert a battery, but before
    soldiering the battery case, apply a small amount of solder to the
    battery's ground connection (large square pad).  A small amount of
    solder will add height to the square pad connection and ensure a good
    connection between the battery and ground.

    Connect the 9v adaptor, set the time, disconnect the 9v adaptor for ten
    minutes, connect it again, and verify that the clock kept the correct
    time.  Because the clock is extremely power-efficient during sleep, the
    capacitors store enough charge to keep the clock running for 3-5
    minutes.  Leaving the clock unplugged for ten minutes ensures that the
    backup battery is actually in use.

9.  Solder the "Light Sensor" parts.  So the clock can accurately gauge
    ambient lighting, install the photoresistor such that it points towards
    the front of the clock and away from the tube.  Connect the 9v adaptor,
    and using a flashlight, lamp, or similar, verify that the clock
    responds to changes in ambient light.

10. Assemble the acrylic case and enjoy!


#####################
## Original Design ##
#####################

The original Adafruit Ice Tube Clock board was designed by Limor Fried
(Lady Ada) of Adafruit.  The case was designed by Amanda Wozniak (w0z).
The original design files are available via GitHub:

    https://github.com/adafruit/Ice-Tube-Clock/


######################
## Acknowledgements ##
######################

The Adafruit Ice Tube Clock board was loosely based on the inGrid
IV-18 clock by Riad S. Wahby.  My xmas-icetube board revision is based
on the Adafruit Ice Tube Clock board by Lady Ada.

The clock case was originally designed by Amanda Wozniak (w0z), and I have
only made minor adjustments to her design.  Adafruit forum user Daygecko
also deserves credit for finding clear machine nuts and bolts from
McMaster-Carr, which give the assembled case a cleaner look.

Phil DeGruy (PhilD13) reviewed my initial design and suggested several
components; the ZVN2110A and ZVP2001A MOSFETs in particular were
particularly useful for generating AC for the IV-18 filament.  Phil
also found many alternative parts for the bill of materials which cost
less than my original selections.

I also had fruitful discussions with both Phil DeGruy and Russell Walker
(Russell27), mostly  in regard to properly driving the IV-18 tube.  Phil
and Russell built their own xmas-icetube clocks and provided useful
feedback on the overall design.

Because I am inexperienced in electronics design, I must add the following
disclaimer:  Those cited in this section cannot be faulted for any bugs in
the xmas-icetube hardware revision.


#############
## License ##
#############

The xmas-icetube hardware revision may be used under the Attribution-
ShareAlike 3.0 (CC BY-SA 3.0), available from Creative Commons:

    http://creativecommons.org/licenses/by-sa/3.0/


